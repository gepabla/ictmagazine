/*
 * File: app/view/contenedorGeneral.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.contenedorGeneral', {
    extend: 'Ext.Panel',
    alias: 'widget.contenedorGeneral',

    config: {
        id: 'contenedorGeneral',
        itemId: 'contenedorGeneral',
        ui: '',
        autoDestroy: false,
        layout: {
            type: 'card'
        },
        modal: false,
        items: [
            {
                xtype: 'container',
                id: 'loginFormContainer',
                itemId: 'loginFormContainer',
                layout: {
                    type: 'card'
                },
                items: [
                    {
                        xtype: 'formpanel',
                        height: '30%',
                        id: 'loginForm',
                        itemId: 'loginForm',
                        style: '',
                        width: '',
                        layout: {
                            align: 'center',
                            pack: 'center',
                            type: 'vbox'
                        },
                        scrollable: 'horizontal',
                        items: [
                            {
                                xtype: 'passwordfield',
                                itemId: 'claveTxt',
                                style: '-webkit-border-radius : 10px;'
                            },
                            {
                                xtype: 'button',
                                itemId: 'ingresarBtn',
                                style: 'margin-top : 15px',
                                ui: 'confirm',
                                text: 'Ingresar'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'list',
                id: 'menuMemoria',
                itemId: 'menuMemoria',
                layout: {
                    type: 'card'
                },
                itemTpl: [
                    '<div>{titulo}</div>'
                ],
                store: 'MyJsonStore'
            },
            {
                xtype: 'toolbar',
                docked: 'top',
                hidden: true,
                id: 'barraNavegacion',
                itemId: 'barraNavegacion',
                ui: 'light',
                title: 'Memoria',
                items: [
                    {
                        xtype: 'button',
                        hidden: true,
                        id: '',
                        itemId: 'volverBtn',
                        ui: 'back',
                        iconMask: true,
                        text: 'Atras'
                    },
                    {
                        xtype: 'spacer'
                    },
                    {
                        xtype: 'button',
                        itemId: 'inicioBtn',
                        right: '',
                        style: 'color : #fff;',
                        ui: 'action',
                        badgeText: '',
                        iconMask: true,
                        text: 'Inicio'
                    }
                ]
            },
            {
                xtype: 'panel',
                hideAnimation: {
                    type: 'slideOut',
                    direction: 'right'
                },
                html: '',
                id: 'contenidoDetallado',
                itemId: 'contenidoDetallado',
                padding: '12px',
                showAnimation: {
                    type: 'slide'
                },
                style: 'background-color : #fff;',
                tpl: [
                    '<div>{contenido}</div>'
                ],
                ui: 'light',
                layout: {
                    animation: 'slide',
                    type: 'card'
                },
                scrollable: true,
                listeners: [
                    {
                        fn: function(component, options) {
                            Ext.get('pageContainer').on({
                                tap:function(e){

                                    var comp = Ext.getCmp("popUpImagen");

                                    if(comp === undefined){
                                        comp = Ext.create("MyApp.view.popUpImagen");  
                                    }

                                    Ext.Viewport.add(comp);

                                    comp.setData({imageSrc : e.target.getAttribute("src")});

                                    comp.show();

                                },
                                delegate: 'img'
                            });

                        },
                        event: 'painted'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onIngresarBtnTap',
                event: 'tap',
                delegate: '#ingresarBtn'
            },
            {
                fn: 'onMenuMemoriaItemTap',
                event: 'itemtap',
                delegate: '#menuMemoria'
            },
            {
                fn: 'onVolverBtnTap',
                event: 'tap',
                delegate: '#volverBtn'
            },
            {
                fn: 'onInicioBtnTap',
                event: 'tap',
                delegate: '#inicioBtn'
            },
            {
                fn: 'onContenidoDetalladoShow',
                event: 'show',
                delegate: '#contenidoDetallado'
            }
        ]
    },

    onIngresarBtnTap: function(button, e, options) {

        var value = this.down('#claveTxt').getValue();  

        if(value == "clave"){
            this.animateActiveItem(1,{type:'slide',direction:'left'});
            this.down("#barraNavegacion").show();
            this.down("#volverBtn").hide(); 
        }else{

            var testPop = new Ext.Panel({
                floating: true,
                width: 200,
                height: 200,
                hideOnMaskTap: true,
                styleHtmlContent: true,
                html: 'Clave incorrecta',
                centered : true,
                cls: 'htmlcontent',
                modal : true,
                showAnimation : {type:'pop',direction : 'left'}
            });
            this.add(testPop);
            testPop.show();

        }
    },

    onMenuMemoriaItemTap: function(dataview, index, target, record, e, options) {
        //this.animateActiveItem(3,{type:'slide',direction:'left'});

        this.down("#volverBtn").show();

        var component = Ext.getCmp("contenidoDetallado");

        component.setData(record.data);

        component.show();

    },

    onVolverBtnTap: function(button, e, options) {
        button.hide();

        //this.animateActiveItem(1,{type:'slide',direction:'right'});

        Ext.getCmp("menuMemoria").deselectAll();

        Ext.getCmp("contenidoDetallado").hide();

    },

    onInicioBtnTap: function(button, e, options) {

        this.animateActiveItem(0,{type:'slide',direction:'right'});

        this.down("#barraNavegacion").hide();

        Ext.getCmp("menuMemoria").deselectAll();

        Ext.getCmp("contenidoDetallado").hide();


    },

    onContenidoDetalladoShow: function(component, options) {
        window.setTimeout(function(){component.getScrollable().getScroller().scrollToTop();},10);
    }

});